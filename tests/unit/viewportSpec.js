// Generated by CoffeeScript 1.6.2
(function() {
  define(['game'], function(game) {
    describe('The main canvas', function() {
      return it('has the size of the browser window', function() {
        var canvas;

        canvas = getCanvas();
        expect(canvas.width).toBe(window.innerWidth);
        return expect(canvas.height).toBe(window.innerHeight);
      });
    });
    return describe('The game viewport', function() {
      var canvas, contextMock, engine, viewport;

      engine = null;
      viewport = null;
      contextMock = null;
      canvas = null;
      beforeEach(function() {
        engine = game.engine;
        viewport = engine.viewport;
        contextMock = createMockFor(CanvasRenderingContext2D);
        return canvas = getCanvas();
      });
      it('exists', function() {
        return expect(engine.viewport).toBeDefined();
      });
      it('has the same size as the canvas', function() {
        expect(engine.viewport.width).toBe(canvas.width);
        return expect(engine.viewport.height).toBe(canvas.height);
      });
      it('is positioned on center of the game surface', function() {
        expect(viewport.x).toBe(engine.surface.width / 2 - canvas.width / 2);
        return expect(viewport.y).toBe(engine.surface.height / 2 - canvas.height / 2);
      });
      it('can be drawn', function() {
        expect(viewport.draw).toBeDefined();
        return expect(typeof viewport.draw).toBe('function');
      });
      return describe('when drawing', function() {
        beforeEach(function() {
          spyOn(game.engine.hud, 'draw');
          return viewport.draw();
        });
        it('should clear the screen', function() {
          return expect(contextMock.clearRect).toHaveBeenCalledWith(0, 0, canvas.width, canvas.height);
        });
        return it('should draw the HUD', function() {
          return expect(game.engine.hud.draw).toHaveBeenCalled();
        });
      });
    });
  });

}).call(this);

/*
//@ sourceMappingURL=viewportSpec.map
*/
