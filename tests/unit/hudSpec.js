// Generated by CoffeeScript 1.6.2
(function() {
  define(['game'], function(game) {
    return describe('The HUD', function() {
      var canvas, engine, hud, inResume;

      hud = null;
      inResume = null;
      engine = null;
      canvas = getCanvas();
      beforeEach(function() {
        game.engine = engine = new Engine();
        game.engine.init();
        hud = engine.hud;
        return inResume = {
          x: hud.pauseScreen.resumeButton.x + 10,
          y: hud.pauseScreen.resumeButton.y + 10
        };
      });
      it('can be drawn', function() {
        return expect(typeof hud.draw).toBe('function');
      });
      it('has a pause screen', function() {
        return expect(hud.pauseScreen).toBeDefined();
      });
      describe('when the game is paused', function() {
        beforeEach(function() {
          return engine.pause();
        });
        it('clicking on the resume button resumes the game', function() {
          mouseDownAt(inResume.x, inResume.y);
          mouseUpAt(inResume.x, inResume.y);
          engine.update();
          return expect(engine.isPaused()).toBeFalsy();
        });
        describe('the pause screen', function() {
          var screen;

          screen = null;
          beforeEach(function() {
            return screen = hud.pauseScreen;
          });
          it('should be visible', function() {
            return expect(screen.visible).toBeTruthy();
          });
          it('should display "Game paused"', function() {
            expect(screen.text.text).toBe('Game paused');
            expect(screen.text.style).toBe('white');
            return expect(screen.text.font).toBe('48px sans-serif');
          });
          return describe('when drawn', function() {
            var contextMock;

            contextMock = null;
            beforeEach(function() {
              return contextMock = createMockFor(CanvasRenderingContext2D);
            });
            return it('should have the correct elements', function() {
              hud.draw();
              expect(contextMock.fillText).toHaveBeenCalledWith('Game paused', canvas.width / 2, 280);
              return expect(contextMock.fillText).toHaveBeenCalledWith('Resume...', canvas.width / 2, 340);
            });
          });
        });
        return describe('when the mouse is over the resume button', function() {
          it('should be hovered', function() {
            moveMouseTo(inResume.x, inResume.y);
            engine.update();
            expect(hud.pauseScreen.resumeButton.isInElement(inResume.x, inResume.y + 10)).toBeTruthy();
            return expect(hud.pauseScreen.resumeButton.state).toBe('hover');
          });
          it('when clicking it is active', function() {
            mouseDownAt(inResume.x, inResume.y);
            engine.update();
            return expect(hud.pauseScreen.resumeButton.state).toBe('active');
          });
          return it('is not active after leaving', function() {
            moveMouseTo(inResume.x, inResume.y);
            moveMouseTo(10, 10);
            engine.update();
            expect(hud.pauseScreen.resumeButton.isInElement(10, 10)).toBeFalsy();
            return expect(hud.pauseScreen.resumeButton.state).not.toBe('hover');
          });
        });
      });
      return describe('when the game is running', function() {
        beforeEach(function() {
          return engine.play();
        });
        return it('has a pause button', function() {
          expect(hud.pauseButton).toBeDefined();
          return expect(hud.pauseButton.visible).toBeTruthy();
        });
      });
    });
  });

}).call(this);

/*
//@ sourceMappingURL=hudSpec.map
*/
