// Generated by CoffeeScript 1.6.2
(function() {
  var canvas, context, createGame, createHud, createSurface, debug, enableLog, game,
    __slice = [].slice;

  debug = false;

  enableLog = function(object) {
    var id, overload, prop;

    overload = function(name, instance) {
      var old,
        _this = this;

      old = instance[name];
      return instance[name] = function() {
        var args;

        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        console.log("" + name + "(" + args + ")");
        return old.apply(instance, args);
      };
    };
    for (id in object) {
      prop = object[id];
      if (typeof prop === 'function') {
        overload(id, object);
      }
    }
    return true;
  };

  canvas = document.createElement('canvas');

  canvas.width = 1001;

  canvas.height = 601;

  document.body.appendChild(canvas);

  context = canvas.getContext('2d');

  if (debug) {
    enableLog(context);
  }

  createSurface = function(width, height) {
    var surface;

    return surface = {
      width: width,
      height: height,
      drawLine: function(x1, y1, x2, y2, width) {
        if (width == null) {
          width = 1;
        }
        context.beginPath();
        context.lineWidth = width;
        context.moveTo(x1 + width / 2, y1 + width / 2);
        context.lineTo(x2 + width / 2, y2 + width / 2);
        return context.stroke();
      },
      context: context,
      draw: function() {
        context.clearRect(0, 0, canvas.width, canvas.height);
        return game.hud.draw();
      }
    };
  };

  createHud = function() {
    var drawPauseScreen;

    drawPauseScreen = function() {
      context.fillStyle = '#eee';
      context.fillRect(0, 0, canvas.width, canvas.height);
      context.fillStyle = 'black';
      context.textBaseline = 'middle';
      context.textAlign = 'center';
      context.font = '48px sans-serif';
      context.fillText('Game paused', canvas.width / 2, 280);
      context.fillStyle = '#00aaaa';
      context.fillRect(420, 320, 160, 40);
      context.fillStyle = 'ffffff';
      context.font = '28px sans-serif';
      return context.fillText('Resume...', canvas.width / 2, 340);
    };
    return {
      draw: function() {
        if (game.isPaused()) {
          return drawPauseScreen();
        }
      }
    };
  };

  createGame = function() {
    var running;

    running = null;
    return {
      surface: createSurface(800, 600),
      hud: createHud(),
      init: function() {
        return setInterval(this.surface.draw, 1000 / 60);
      },
      pause: function() {
        return running = false;
      },
      play: function() {
        return running = true;
      },
      isPaused: function() {
        return !running;
      }
    };
  };

  window.game = game = createGame();

  game.init();

}).call(this);

/*
//@ sourceMappingURL=game.map
*/
